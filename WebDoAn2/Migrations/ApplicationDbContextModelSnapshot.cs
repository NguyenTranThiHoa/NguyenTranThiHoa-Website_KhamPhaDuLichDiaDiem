// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebDoAn2.Data;

#nullable disable

namespace WebDoAn2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebDoAn2.Model.HotelsModel", b =>
                {
                    b.Property<int>("HotelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelID"));

                    b.Property<string>("CityHotel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionHotel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageHotel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("NameHotel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PricePerNight")
                        .HasColumnType("int");

                    b.Property<string>("ProvinceHotel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("RatingHotel")
                        .HasColumnType("real");

                    b.HasKey("HotelID");

                    b.HasIndex("LocationID");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            HotelID = 1,
                            CityHotel = "Thành phố 1",
                            DescriptionHotel = "Hợp lí rất đẹp đó",
                            ImageHotel = "image1.jpg",
                            LocationID = 1,
                            NameHotel = "Name 1",
                            PricePerNight = 250000,
                            ProvinceHotel = "Tỉnh 1",
                            RatingHotel = 4.8f
                        },
                        new
                        {
                            HotelID = 2,
                            CityHotel = "Thành phố 2",
                            DescriptionHotel = "Hợp lí rất đẹp đó",
                            ImageHotel = "image2.jpg",
                            LocationID = 2,
                            NameHotel = "Name 2",
                            PricePerNight = 450000,
                            ProvinceHotel = "Tỉnh 2",
                            RatingHotel = 4.2f
                        },
                        new
                        {
                            HotelID = 3,
                            CityHotel = "Thành phố 3",
                            DescriptionHotel = "Hợp lí rất đẹp đó",
                            ImageHotel = "image3.jpg",
                            LocationID = 3,
                            NameHotel = "Name 3",
                            PricePerNight = 210000,
                            ProvinceHotel = "Tỉnh 3",
                            RatingHotel = 4.4f
                        },
                        new
                        {
                            HotelID = 4,
                            CityHotel = "Thành phố 4",
                            DescriptionHotel = "Hợp lí rất đẹp đó",
                            ImageHotel = "image4.jpg",
                            LocationID = 4,
                            NameHotel = "Name 4",
                            PricePerNight = 330000,
                            ProvinceHotel = "Tỉnh 4",
                            RatingHotel = 4.2f
                        },
                        new
                        {
                            HotelID = 5,
                            CityHotel = "Thành phố 5",
                            DescriptionHotel = "Hợp lí rất đẹp đó",
                            ImageHotel = "image5.jpg",
                            LocationID = 5,
                            NameHotel = "Name 5",
                            PricePerNight = 460000,
                            ProvinceHotel = "Tỉnh 5",
                            RatingHotel = 5f
                        });
                });

            modelBuilder.Entity("WebDoAn2.Model.LocationsModel", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationID"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<float?>("Rating")
                        .HasColumnType("real");

                    b.HasKey("LocationID");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationID = 1,
                            City = "Thành phố Hạ Long",
                            Description = "Vịnh nổi tiếng với cảnh đẹp",
                            ImageUrl = "image1.jpg",
                            Name = "Vịnh Hạ Long tui",
                            Province = "Quảng Ninh",
                            PublishedDate = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4.8f
                        },
                        new
                        {
                            LocationID = 2,
                            City = "Thành phố Đà Lạt",
                            Description = "Thành phố sương mù lãng mạn",
                            ImageUrl = "image2.jpg",
                            Name = "Thành phố Sương mù Đà Lạt",
                            Province = "Lâm Đồng",
                            PublishedDate = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4.5f
                        },
                        new
                        {
                            LocationID = 3,
                            City = "Thành phố 3",
                            Description = "Mang tên đẹp, xuất sắc",
                            ImageUrl = "image3.jpg",
                            Name = "Name 3",
                            Province = "Tỉnh 3",
                            PublishedDate = new DateTime(2024, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4.6f
                        },
                        new
                        {
                            LocationID = 4,
                            City = "Thành phố 4",
                            Description = "Phong cảnh đẹp, rất hữu tình",
                            ImageUrl = "image4.jpg",
                            Name = "Name 4",
                            Province = "Tỉnh 4",
                            PublishedDate = new DateTime(2023, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 5f
                        },
                        new
                        {
                            LocationID = 5,
                            City = "Thành phố 5",
                            Description = "Con người rất thân thiện, tích cực và vui vẻ",
                            ImageUrl = "image5.jpg",
                            Name = "Name 5",
                            Province = "Tỉnh 5",
                            PublishedDate = new DateTime(2022, 9, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4.3f
                        });
                });

            modelBuilder.Entity("WebDoAn2.Model.ReviewsModel", b =>
                {
                    b.Property<int>("ReviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewID"));

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("RatingReviews")
                        .HasColumnType("real");

                    b.Property<DateTime?>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ReviewID");

                    b.HasIndex("LocationID");

                    b.HasIndex("UserID");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewID = 2,
                            LocationID = 1,
                            NoiDung = "Cảnh này đẹp quá chời đẹp",
                            RatingReviews = 4.5f,
                            ReviewDate = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserID = 1
                        },
                        new
                        {
                            ReviewID = 3,
                            LocationID = 2,
                            NoiDung = "Tôi thích món ăn lắm, rất ngon luôn nha",
                            RatingReviews = 4.8f,
                            ReviewDate = new DateTime(2024, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserID = 1
                        },
                        new
                        {
                            ReviewID = 4,
                            LocationID = 2,
                            NoiDung = "Tôi sẽ tham gia và hỗ trợ tiếp nhé",
                            RatingReviews = 4.4f,
                            ReviewDate = new DateTime(2024, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserID = 2
                        },
                        new
                        {
                            ReviewID = 5,
                            LocationID = 4,
                            NoiDung = "Sẽ đến và tham quan tiếp",
                            RatingReviews = 4.7f,
                            ReviewDate = new DateTime(2022, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserID = 3
                        },
                        new
                        {
                            ReviewID = 6,
                            LocationID = 3,
                            NoiDung = "Tuyệt vời, mọi thứ rất oke và đẹp",
                            RatingReviews = 5f,
                            ReviewDate = new DateTime(2023, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserID = 5
                        });
                });

            modelBuilder.Entity("WebDoAn2.Model.SlideModel", b =>
                {
                    b.Property<int>("SlideID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SlideID"));

                    b.Property<string>("SlideImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SlideID");

                    b.ToTable("Slide");

                    b.HasData(
                        new
                        {
                            SlideID = 1,
                            SlideImage = "image1.jpg"
                        });
                });

            modelBuilder.Entity("WebDoAn2.Model.SpecialtiesModel", b =>
                {
                    b.Property<int>("SpecialtyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecialtyID"));

                    b.Property<string>("CityFood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionFood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrlFood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("NameFood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvinceFood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("RatingFood")
                        .HasColumnType("real");

                    b.HasKey("SpecialtyID");

                    b.HasIndex("LocationID");

                    b.ToTable("Specialties");

                    b.HasData(
                        new
                        {
                            SpecialtyID = 1,
                            DescriptionFood = "Món ăn rất ngon",
                            ImageUrlFood = "image1.jpg",
                            LocationID = 1,
                            NameFood = "Food 1",
                            RatingFood = 4.5f
                        },
                        new
                        {
                            SpecialtyID = 2,
                            DescriptionFood = "Món ăn tuyệt vời",
                            ImageUrlFood = "image2.jpg",
                            LocationID = 2,
                            NameFood = "Food 2",
                            RatingFood = 4.6f
                        },
                        new
                        {
                            SpecialtyID = 3,
                            DescriptionFood = "Món ăn rất oke",
                            ImageUrlFood = "image3.jpg",
                            LocationID = 3,
                            NameFood = "Food 3",
                            RatingFood = 4.7f
                        },
                        new
                        {
                            SpecialtyID = 4,
                            DescriptionFood = "Món ăn xuất sắc",
                            ImageUrlFood = "image4.jpg",
                            LocationID = 4,
                            NameFood = "Food 4",
                            RatingFood = 4.6f
                        },
                        new
                        {
                            SpecialtyID = 5,
                            DescriptionFood = "Món ăn hấp dẫn",
                            ImageUrlFood = "image5.jpg",
                            LocationID = 5,
                            NameFood = "Food 5",
                            RatingFood = 4.4f
                        });
                });

            modelBuilder.Entity("WebDoAn2.Model.TransportTypeModel", b =>
                {
                    b.Property<int>("TransportTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransportTypeID"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransportTypeID");

                    b.ToTable("TransportTypes");

                    b.HasData(
                        new
                        {
                            TransportTypeID = 1,
                            Name = "Xe máy"
                        },
                        new
                        {
                            TransportTypeID = 2,
                            Name = "Xe hơi"
                        },
                        new
                        {
                            TransportTypeID = 3,
                            Name = "Xe buýt"
                        },
                        new
                        {
                            TransportTypeID = 4,
                            Name = "Tàu hỏa"
                        });
                });

            modelBuilder.Entity("WebDoAn2.Model.TransportsModel", b =>
                {
                    b.Property<int>("TransportID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransportID"));

                    b.Property<string>("CityTransports")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactTransports")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionTransports")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<int?>("PriceRange")
                        .HasColumnType("int");

                    b.Property<string>("ProvinceTransports")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransportTypeID")
                        .HasColumnType("int");

                    b.HasKey("TransportID");

                    b.HasIndex("LocationID");

                    b.HasIndex("TransportTypeID");

                    b.ToTable("Transports");

                    b.HasData(
                        new
                        {
                            TransportID = 1,
                            CityTransports = "Thành phố 1",
                            ContactTransports = "0772962490",
                            DescriptionTransports = "Rất oke, dễ chịu dễ đi lắm",
                            ImageUrl = "image1.jpg",
                            LocationID = 1,
                            PriceRange = 520000,
                            ProvinceTransports = "Tỉnh 1",
                            TransportTypeID = 1
                        },
                        new
                        {
                            TransportID = 2,
                            CityTransports = "Thành phố 2",
                            ContactTransports = "0992568420",
                            DescriptionTransports = "Rất oke",
                            ImageUrl = "image2.jpg",
                            LocationID = 2,
                            PriceRange = 350000,
                            ProvinceTransports = "Tỉnh 2",
                            TransportTypeID = 2
                        },
                        new
                        {
                            TransportID = 3,
                            CityTransports = "Thành phố 3",
                            ContactTransports = "0372777243",
                            DescriptionTransports = "Rất hợp lí",
                            ImageUrl = "image3.jpg",
                            LocationID = 3,
                            PriceRange = 340000,
                            ProvinceTransports = "Tỉnh 3",
                            TransportTypeID = 2
                        },
                        new
                        {
                            TransportID = 4,
                            CityTransports = "Thành phố 4",
                            ContactTransports = "0122568480",
                            DescriptionTransports = "Thoải mái và dễ chịu",
                            ImageUrl = "image4.jpg",
                            LocationID = 4,
                            PriceRange = 110000,
                            ProvinceTransports = "Tỉnh 4",
                            TransportTypeID = 1
                        },
                        new
                        {
                            TransportID = 5,
                            CityTransports = "Thành phố 5",
                            ContactTransports = "0772962490",
                            DescriptionTransports = "Giá cả hợp lí",
                            ImageUrl = "image5.jpg",
                            LocationID = 5,
                            PriceRange = 800000,
                            ProvinceTransports = "Tỉnh 5",
                            TransportTypeID = 2
                        });
                });

            modelBuilder.Entity("WebDoAn2.Model.UsersModel", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Email = "hoanguyentranthi32@gmail.com",
                            FullName = "Nguyen Tran Thi Hoa",
                            ImageUser = "image1.jpg",
                            Password = "0309",
                            Phone = "0772962490",
                            Role = "User",
                            Username = "ThiHoa"
                        },
                        new
                        {
                            UserID = 2,
                            Email = "cogainho@gmail.com",
                            FullName = "Tran Thi My A",
                            ImageUser = "image2.jpg",
                            Password = "2503",
                            Phone = "0773258462",
                            Role = "Admin",
                            Username = "CoGaiNho"
                        },
                        new
                        {
                            UserID = 3,
                            Email = "caunhocxauxi23@gmail.com",
                            FullName = "Le Van H",
                            ImageUser = "image3.jpg",
                            Password = "12345",
                            Phone = "0992152625",
                            Role = "User",
                            Username = "CauNhocXauXi"
                        },
                        new
                        {
                            UserID = 4,
                            Email = "Echcon123@gmail.com",
                            FullName = "Nguyen Van C",
                            ImageUser = "image4.jpg",
                            Password = "EchCon123",
                            Phone = "0125226584",
                            Role = "User",
                            Username = "EchCon"
                        },
                        new
                        {
                            UserID = 5,
                            Email = "vitconvotri253@gmail.com",
                            FullName = "Nguyen Pham D",
                            ImageUser = "image5.jpg",
                            Password = "VitCon2003",
                            Phone = "0385584808",
                            Role = "Admin",
                            Username = "VitConVoTri"
                        });
                });

            modelBuilder.Entity("WebDoAn2.Model.HotelsModel", b =>
                {
                    b.HasOne("WebDoAn2.Model.LocationsModel", "Locations")
                        .WithMany()
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locations");
                });

            modelBuilder.Entity("WebDoAn2.Model.ReviewsModel", b =>
                {
                    b.HasOne("WebDoAn2.Model.LocationsModel", "Locations")
                        .WithMany()
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebDoAn2.Model.UsersModel", "Users")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locations");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("WebDoAn2.Model.SpecialtiesModel", b =>
                {
                    b.HasOne("WebDoAn2.Model.LocationsModel", "Locations")
                        .WithMany()
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locations");
                });

            modelBuilder.Entity("WebDoAn2.Model.TransportsModel", b =>
                {
                    b.HasOne("WebDoAn2.Model.LocationsModel", "Locations")
                        .WithMany()
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebDoAn2.Model.TransportTypeModel", "TransportType")
                        .WithMany()
                        .HasForeignKey("TransportTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locations");

                    b.Navigation("TransportType");
                });
#pragma warning restore 612, 618
        }
    }
}
